on:
  workflow_call:
    inputs:
      env:
        required: false
        type: string
        default: dev
    #secrets:
    #  sa-key:
    #    required: false

jobs:
  prepare_environment:
    name: Prepare Environment
    runs-on: ubuntu:latest
    timeout-minutes: 30
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
  code_quality:
    name: Code Quality
    needs: prepare_environment
    runs-on: ubuntu:latest
    timeout-minutes: 2
    env:
      JAVA_HOME: ${{ needs.prepare_environment.outputs.JAVA_HOME }}
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'                               

  build:
    name: Build
    runs-on: ubuntu:latest
    needs: [ prepare_environment, code_quality ]
    timeout-minutes: 60
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Build
        run: ./gradlew build -x lint

  unit_tests:
    name: Run Unit Tests
    runs-on: ubuntu:latest
    needs: [ prepare_environment, code_quality, build]
    timeout-minutes: 30
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: UI Tests
        run: ./gradlew testDebugUnitTest jacocoTestReport

  ui_tests:
    name: Run UI Automation Tests
    runs-on: ubuntu:latest
    needs: [ prepare_environment, code_quality, build]
    timeout-minutes: 30
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: UI Tests
        run: ./gradlew connectedDebugAndroidTest

  check_coverage:
    name: Check Coverage
    runs-on: ubuntu:latest
    needs: [ prepare_environment, build, unit_tests, ui_tests ]
    timeout-minutes: 30
    steps:
      - name: Generate coverage report
        id: jacoco
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: |
            ${{ github.workspace }}/**/build/reports/jacoco/prodNormalDebugCoverage/prodNormalDebugCoverage.xml,
            ${{ github.workspace }}/**/build/reports/jacoco/**/debugCoverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 1
          min-coverage-changed-files: 1

  notification:
    name: Slack Notification
    if: always() # Ensures this step runs even if previous jobs fail
    uses: mtdtechnology-net/github-actions/.github/workflows/slack-notification.yml@1.0.10
    with:
      status: |
        \nCode Quality: ${{ needs.code_quality.result }}\n 
        Build: ${{ needs.build.result }} \n 
        Unit Tests: ${{ needs.unit_tests.result }}\n
        UI Tests: ${{ needs.ui_tests.result }}
        Coverage: ${{ needs.check_coverage.result }}
      message: |
        Build and test completed for branch: ${{ github.head_ref || github.ref_name }}
      url: ${{ github.event.head_commit.url }}
    secrets:
      WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    needs:
      - code_quality
      - build
      - unit_tests
      - ui_tests
      - check_coverage

  cleanup:
    name: Cleanup
    runs-on: ubuntu:latest
    needs: [ prepare_environment, code_quality, build, unit_tests, ui_tests, check_coverage, notification ]
    if: always()
    steps:
      - name: Cleanup workspace
        uses: mtdtechnology-net/github-actions/.github/actions/cleanup@1.0.11